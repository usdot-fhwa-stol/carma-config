#  Copyright (C) 2018-2021 LEIDOS.
#
#  Licensed under the Apache License, Version 2.0 (the "License"); you may not
#  use this file except in compliance with the License. You may obtain a copy of
#  the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations under
#  the License.

# Docker Compose Spec Version
version: '2'

services:
  roscore:
    image: ${DOCKER_ORG}/carma-base:${DOCKER_TAG}
    network_mode: host
    container_name: roscore
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/logs:/opt/carma/logs
    restart: always
    environment:
      - ROS_IP=127.0.0.1
    command: roscore

  platform:
    image: ${DOCKER_ORG}/carma-platform:${DOCKER_TAG}
    network_mode: host
    container_name: platform
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/yolo:/opt/carma/yolo
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/data:/opt/carma/data
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'wait-for-it.sh localhost:11311 -- roslaunch /opt/carma/vehicle/config/carma_docker.launch'

  platform_ros2:
    image: ${DOCKER_ORG}/carma-platform:${DOCKER_TAG}
    network_mode: host
    container_name: platform_ros2
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/yolo:/opt/carma/yolo
      - /home/carma/carma/carma_ws_ros2/src/carma-platform/system_controller/config/config.yaml:/opt/carma/install_ros2/system_controller/share/system_controller/config/config.yaml
      - /home/carma/carma/carma_ws_ros2/src/carma-platform/carma/launch/:/opt/carma/install_ros2/carma/share/carma/launch
      - /home/carma/carma/carma_ws_ros2/src/carma-platform/basic_travel_simulator/config:/opt/carma/install_ros2/basic_travel_simulator/share/basic_travel_simulator/config
    command: bash -c 'source /opt/carma/install_ros2/setup.bash && ros2 launch /opt/carma/vehicle/config/carma_docker.launch.py'

  ros1_bridge:
    image: ros-humble-ros1-bridge-builder:latest
    network_mode: host
#    privileged: true
    container_name: ros1_bridge
    volumes_from:
      - container:carma-config:ro
    environment:
      - ROS_IP=127.0.0.1
      - ROS_MASTER_URI=http://localhost:11311
    volumes:
#      - /dev/shm:/dev/shm
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/yolo:/opt/carma/yolo
    command: bash -c 'export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp && 
            wait-for-it localhost:11311 -- rosparam load /opt/carma/vehicle/config/bridge.yml && 
            source /opt/ros/humble/setup.bash &&
            source /carma-msgs-ros1/install/local_setup.bash &&
            source /carma-msgs-ros2/install/local_setup.bash &&
            source /ros-humble-ros1-bridge/install/local_setup.bash &&
            ros2 run ros1_bridge dynamic_bridge --multi-threads'

  mock-lightbar-driver:
    image: ${DOCKER_ORG}/carma-platform:${DOCKER_TAG}
    network_mode: host
    container_name: carma-mock-lightbar-driver
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/data:/opt/carma/data
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:="lightbar bag_parser"'

  mock-can-driver:
    image: ${DOCKER_ORG}/carma-platform:${DOCKER_TAG}
    network_mode: host
    container_name: carma-mock-can-driver
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=can'

  mock-comms-driver:
    image: ${DOCKER_ORG}/carma-platform:${DOCKER_TAG}
    network_mode: host
    container_name: carma-mock-comms-driver
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=comms'

  mock-controller-driver:
    image: ${DOCKER_ORG}/carma-platform:${DOCKER_TAG}
    network_mode: host
    container_name: carma-srx-controller-driver
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=controller'

  mock-radar-driver:
    image: ${DOCKER_ORG}/carma-platform:${DOCKER_TAG}
    network_mode: host
    container_name: carma-mock-radar-driver
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=radar'

  mock-gnss-driver:
    image: ${DOCKER_ORG}/carma-platform:${DOCKER_TAG}
    network_mode: host
    container_name: carma-mock-gnss-driver
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=gnss'

  mock-imu-driver:
    image: ${DOCKER_ORG}/carma-platform:${DOCKER_TAG}
    network_mode: host
    container_name: carma-mock-imu-driver
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=imu'

  mock-lidar-driver:
    image: ${DOCKER_ORG}/carma-platform:${DOCKER_TAG}
    network_mode: host
    container_name: carma-mock-lidar-driver
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=lidar'

  mock-camera-driver:
    image: ${DOCKER_ORG}/carma-platform:${DOCKER_TAG}
    network_mode: host
    container_name: carma-mock-camera-driver
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=camera'

  mock-roadway-sensor-driver:
    image: ${DOCKER_ORG}/carma-platform:${DOCKER_TAG}
    network_mode: host
    container_name: carma-mock-roadway-sensor-driver
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=roadway_sensor'
