#  Copyright (C) 2023 LEIDOS.
# 
#  Licensed under the Apache License, Version 2.0 (the "License"); you may not
#  use this file except in compliance with the License. You may obtain a copy of
#  the License at
# 
#  http://www.apache.org/licenses/LICENSE-2.0
# 
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations under
#  the License.

# This is a test file for a dual compute host
version: "3.8"

services:
  roscore:
    image: usdotfhwastoldev/carma-base:develop
    networks:
      - host
    volumes:
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/logs:/opt/carma/logs
      - carma-config-data:/opt/carma/vehicle/config
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
      - ROS_IP=127.0.0.1
    command: roscore

  ros1_bridge:
    image: usdotfhwastoldev/carma-msgs:develop
    networks:
      - host
    environment:
      - ROS_IP=127.0.0.1
      - ROS_MASTER_URI=http://localhost:11311
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/yolo:/opt/carma/yolo
      - carma-config-data:/opt/carma/vehicle/config
    deploy:
      placement:
        constraints:
          - node.role == manager
    command: bash -c 'wait-for-it.sh localhost:11311 -- rosparam load /opt/carma/vehicle/config/bridge.yml && source ~/.base-image/workspace/install/setup.bash && ros2 run ros1_bridge dynamic_bridge --multi-threads'

  platform:
    image: usdotfhwastoldev/carma-platform:develop
    networks:
      - host
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/yolo:/opt/carma/yolo
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/data:/opt/carma/data
      - carma-config-data:/opt/carma/vehicle/config
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'wait-for-it.sh localhost:11311 -- roslaunch /opt/carma/vehicle/config/carma_docker.launch'

  platform_ros2:
    image: usdotfhwastoldev/carma-platform:develop
    networks:
      - host
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/yolo:/opt/carma/yolo
      - carma-config-data:/opt/carma/vehicle/config
    deploy:
      placement:
        constraints:
          - node.role == manager
    command: bash -c 'source /opt/carma/install_ros2/setup.bash && ros2 launch /opt/carma/vehicle/config/carma_docker.launch.py' system_architecture:=dual host_placement:=manager

  mock-lightbar-driver:
    image: usdotfhwastoldev/carma-platform:develop
    networks:
      - host
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/data:/opt/carma/data
      - carma-config-data:/opt/carma/vehicle/config
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:="lightbar bag_parser"'

  mock-can-driver:
    image: usdotfhwastoldev/carma-platform:develop
    networks:
      - host
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
      - carma-config-data:/opt/carma/vehicle/config
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=can'

  mock-comms-driver:
    image: usdotfhwastoldev/carma-platform:develop
    networks:
      - host
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
      - carma-config-data:/opt/carma/vehicle/config
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=comms'

  mock-controller-driver:
    image: usdotfhwastoldev/carma-platform:develop
    networks:
      - host
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
      - carma-config-data:/opt/carma/vehicle/config
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=controller'

  mock-radar-driver:
    image: usdotfhwastoldev/carma-platform:develop
    networks:
      - host
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
      - carma-config-data:/opt/carma/vehicle/config
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=radar'

  mock-gnss-driver:
    image: usdotfhwastoldev/carma-platform:develop
    networks:
      - host
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
      - carma-config-data:/opt/carma/vehicle/config
    deploy:
      placement:
        constraints:
          - node.role == manager 
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=gnss'

  mock-lidar-driver:
    image: usdotfhwastoldev/carma-platform:develop
    networks:
      - host
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
      - carma-config-data:/opt/carma/vehicle/config
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=lidar'

  mock-camera-driver:
    image: usdotfhwastoldev/carma-platform:develop
    networks:
      - host
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
      - carma-config-data:/opt/carma/vehicle/config
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=camera'
    
  mock-roadway-sensor-driver:
    image: usdotfhwastoldev/carma-platform:develop
    networks:
      - host
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/data:/opt/carma/data
      - carma-config-data:/opt/carma/vehicle/config
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
      - ROS_IP=127.0.0.1
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch carma mock_drivers.launch mock_drivers:=roadway_sensor'

volumes:
  carma-config-data:
    external: true
    name: carma-config-data

networks:
  host:
    external: true
    name: host