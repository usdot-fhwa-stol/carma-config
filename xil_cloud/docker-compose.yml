version: '2'
services:
  carma-simulation:
    privileged: true
    image: usdotfhwastoldev/carma-simulation:develop
    networks:
      carma_sim_net:
        ipv4_address: 172.2.0.2
    container_name: carma-simulation
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - carma-simulation_logs:/opt/carma-simulation/logs
      - carma-simulation_scenarios:/opt/carma-simulation/scenarios
      - carma-simulation_etc:/opt/carma-simulation/etc

    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    command: bash -c "./mosaic.sh -s Town04"

  roscore_1:
    image: usdotfhwastol/carma-base:carma-system-4.2.0
    networks:
      carma_net_1:
        ipv4_address: 172.3.0.2
    container_name: roscore_1
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/logs:/opt/carma/logs
    restart: always
    environment:
      - ROS_IP=172.3.0.2
      - ROS_MASTER_URI=http://172.3.0.2:11311/
    command: roscore

  platform_1:
    image: usdotfhwastol/carma-platform:carma-system-4.2.0
    networks:
      carma_net_1:
        ipv4_address: 172.3.0.3
    container_name: platform_1
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/yolo:/opt/carma/yolo
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/data:/opt/carma/data
      - /opt/carma/simulation:/opt/carma/simulation
    environment:
      - ROS_IP=172.3.0.3
      - ROS_MASTER_URI=http://172.3.0.2:11311/
    command: bash -c 'wait-for-it.sh 172.3.0.2:11311 -- roslaunch /opt/carma/vehicle/config/carma_docker.launch'
  platform_ros2_1:
    image: usdotfhwastol/carma-platform:carma-system-4.2.0
    networks:
      carma_net_1:
        ipv4_address: 172.3.0.4
    container_name: platform_ros2_1
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/yolo:/opt/carma/yolo
    command: bash -c 'source /opt/carma/install_ros2/setup.bash && ros2 launch /opt/carma/vehicle/config/carma_docker.launch.py'

  ros1_bridge_1:
    image: usdotfhwastol/carma-msgs:carma-system-4.2.0
    networks:
      carma_net_1:
        ipv4_address: 172.3.0.5
    container_name: ros1_bridge_1
    volumes_from:
      - container:carma-config:ro
    environment:
      - ROS_IP=172.3.0.5
      - ROS_MASTER_URI=http://172.3.0.2:11311/
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/yolo:/opt/carma/yolo
    command: bash -c 'wait-for-it.sh 172.3.0.2:11311 -- rosparam load /opt/carma/vehicle/config/bridge.yml && source ~/.base-image/workspace/install/setup.bash && ros2 run ros1_bridge dynamic_bridge --multi-threads'

  carma-carla-integration_1:
    image: usdotfhwastoldev/carma-carla-integration:develop
    networks:
      carma_net_1:
        ipv4_address: 172.3.0.6
      carma_sim_net:
        ipv4_address: 172.2.0.6
    container_name: carma-carla-integration_1
    volumes_from:
      - container:carma-config:ro
    environment:
      - ROS_IP=172.3.0.6
      - ROS_MASTER_URI=http://172.3.0.2:11311/
    command: bash -c "sleep 10;
                      export PYTHONPATH=$PYTHONPATH:/home/PythonAPI/carla/dist/carla-0.9.10-py3.7-linux-x86_64.egg &&
                      source /home/carma_carla_ws/devel/setup.bash &&
                      roslaunch carma_carla_agent carma_carla_agent.launch role_name:='carma_200'
                                                                           town:='Town04'
                                                                           host:='172.2.0.2'
                                                                           selected_route:='Carma_Street_test_case1'
                                                                           selected_plugins:='['RouteFollowingPlugin','InLaneCruisingPlugin','StopAndWaitPlugin','Pure Pursuit','CooperativeLaneChangePlugin']' 
                                                                           synchronous_mode:='false'
                                                                           spawn_point:='202.5,-180.2,0,0,0,90'
                                                                           speed_Kp:='0.4'
                                                                           speed_Ki:='0.0.3'
                                                                           speed_Kd:='0'"
  web-ui:
    image: usdotfhwastol/carma-web-ui:carma-system-4.2.0
    networks:
      carma_net_1:
        ipv4_address: 172.3.0.7
    container_name: web-ui
    environment:
      - ROS_IP=172.3.0.7
      - ROS_MASTER_URI=http://172.3.0.2:11311/
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  ns3_adapter:
    image: usdotfhwastoldev/carma-ns3-adapter:develop
    networks:
      carma_net_1:
        ipv4_address: 172.3.0.8
      carma_sim_net:
        ipv4_address: 172.2.0.3
    container_name: ns3_adapter
    volumes_from:
      - container:carma-config:ro
    environment:
      - ROS_IP=172.3.0.8
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/yolo:/opt/carma/yolo
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
       - "2181:2182"
    volumes:
      - zookeeper-datavolume:/opt/zookeeper-3.4.13/data
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on: 
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      DOCKER_HOST_IP:  ${DOCKER_HOST_IP}
      KAFKA_ADVERTISED_HOST_NAME:  ${DOCKER_HOST_IP}
      KAFKA_CREATE_TOPICS: "v2xhub_scheduling_plan_sub:1:1,v2xhub_bsm_in:1:1,v2xhub_mobility_operation_in:1:1,v2xhub_mobility_path_in:1:1,vehicle_status_intent_output:1:1,v2xhub_map_msg_in:1:1,modified_spat:1:1,desired_phase_plan:1:1, tsc_config_state:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: "/kafka/kafka-logs"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka-datavolume:/kafka/kafka-logs
##############################################################
# Kafka Owl for monitoring kafka traffic. UI can be accessed on 
# configurable port set in performance/kowl.yaml NOTE: IS NOT 
# NECESSARY FOR DEPLOYMENT BUT HELFUL FOR DEBUGGING! 
################################################################
  kowl:
    image: quay.io/cloudhut/kowl
    container_name: kowl
    restart: on-failure
    network_mode: host
    depends_on:
      - kafka
    environment:
      CONFIG_FILEPATH: /etc/kowl/kowl.yaml
    volumes:
      - ./kowl:/etc/kowl/
  db:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      - MYSQL_DATABASE=IVP
      - MYSQL_USER=IVP
      - MYSQL_PASSWORD_FILE=/secrets/mysql_password.txt
      - MYSQL_ROOT_PASSWORD_FILE=/secrets/mysql_root_password.txt
    network_mode: host
    volumes:
      - mysql-datavolume:/var/lib/mysql
      - ./secrets:/secrets
      - ./mysql:/docker-entrypoint-initdb.d
  php:
    image: usdotfhwaops/php:latest
    container_name: php
    network_mode: host
    depends_on:
      - v2xhub
    stdin_open: true
    tty: true
  v2xhub:
    image: usdotfhwaops/v2xhubamd:integration_test_xil
    container_name: v2xhub
    network_mode: host
    restart: always
    depends_on:
      - db
    environment:
      - MYSQL_PASSWORD=/home/V2X-Hub/secrets/mysql_password.txt
      - SIMULATION_MODE=${SIMULATION_MODE}
      - SIMULATION_IP=172.2.0.2
      - SIMULATION_REGISTRATION_PORT=1615
      - LOCAL_IP=${DOCKER_HOST_IP}
      - TIME_SYNC_TOPIC=time_sync
      - TIME_SYNC_PORT=7575
      - SIM_V2X_PORT=1517
      - V2X_PORT=8686
      - INFRASTRUCTURE_ID=rsu_15
      - KAFKA_BROKER_ADDRESS=${DOCKER_HOST_IP}:9092
    volumes:
      - ./logs:/var/log/tmx
      - ./MAP:/var/www/plugins/MAP
      - ./secrets:/home/V2X-Hub/secrets

  intersection_model:
    image: usdotfhwastoldev/intersection_model:develop
    container_name: intersection_model
    restart: always
    network_mode: host
    depends_on:
      - kafka
    environment:
      DOCKER_HOST_IP:  ${DOCKER_HOST_IP}

    volumes: 
      - ./intersection_model/manifest.json:/home/carma-streets/intersection_model/manifest.json
      - ./intersection_model/logs:/home/carma-streets/intersection_model/logs
      - ./MAP:/home/carma-streets/intersection_model/MAP

  tsc_service:
    image: usdotfhwastoldev/tsc_service:develop
    command: sh -c "/wait && /home/carma-streets/tsc_client_service/build/traffic_signal_controller_service"
    container_name: tsc_service
    restart: always
    network_mode: host
    depends_on:
      - kafka
      - intersection_model
    environment:
      DOCKER_HOST_IP:  ${DOCKER_HOST_IP}
      WAIT_HOSTS: localhost:8080
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECT_TIMEOUT: 30
      SIMULATION_MODE:  ${SIMULATION_MODE}
      CONFIG_FILEPATH: /opt/carma/vehicle/config/tsc_service/manifest.json
    volumes: 
      - ./tsc_client_service/manifest.json:/home/carma-streets/tsc_client_service/manifest.json
      - ./tsc_client_service/logs/:/home/carma-streets/tsc_client_service/logs/
networks:
  carma_sim_net:
    ipam:
      config:
        - subnet: 172.2.0.0/16
  carma_net_1:
    ipam:
      config:
        - subnet: 172.3.0.0/16
volumes:
  mysql-datavolume:
  kafka-datavolume:
  zookeeper-datavolume:
  carma-simulation_logs:
    driver: local
    driver_opts:
      type: none
      device: ./carma-simulation/logs
      o: bind
  carma-simulation_scenarios:
    driver: local
    driver_opts:
      type: none
      device: ./carma-simulation/scenarios
      o: bind
  carma-simulation_etc:
    driver: local
    driver_opts:
      type: none
      device: ./carma-simulation/etc
      o: bind
