#  Copyright (C) 2018-2021 LEIDOS.
#
#  Licensed under the Apache License, Version 2.0 (the "License"); you may not
#  use this file except in compliance with the License. You may obtain a copy of
#  the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations under
#  the License.

# Docker Compose Spec Version
version: '2'

services:
  roscore:
    image: usdotfhwastoldev/carma-base:develop
    network_mode: host
    container_name: roscore
    volumes_from:
      - container:carma-config:ro
    environment:
      - ROS_IP=192.168.0.100
    volumes:
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/logs:/opt/carma/logs
    restart: always
    command: roscore

  platform:
    image: usdotfhwastoldev/carma-platform:develop
    network_mode: host
    container_name: platform
    volumes_from:
      - container:carma-config:ro
    environment:
      - ROS_IP=192.168.0.100
      - NVIDIA_VISIBLE_DEVICES=all
    runtime: nvidia
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/yolo:/opt/carma/yolo
    command: bash -c 'wait-for-it.sh localhost:11311 -- roslaunch /opt/carma/vehicle/config/carma_docker.launch'

  platform_ros2:
    image: usdotfhwastoldev/carma-platform:develop
    network_mode: host
    container_name: platform_ros2
    volumes_from:
      - container:carma-config:ro
    environment:
      - ROS_IP=192.168.0.100
      - NVIDIA_VISIBLE_DEVICES=all
    runtime: nvidia
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/yolo:/opt/carma/yolo
    command: bash -c 'source /opt/carma/install_ros2/setup.bash && ros2 launch /opt/carma/vehicle/config/carma_docker.launch.py'

  ros1_bridge:
    image: usdotfhwastoldev/carma-msgs:develop
    network_mode: host
    container_name: ros1_bridge
    volumes_from:
      - container:carma-config:ro
    environment:
      - ROS_IP=192.168.0.100
      - ROS_MASTER_URI=http://localhost:11311
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/yolo:/opt/carma/yolo
    command: bash -c 'wait-for-it.sh localhost:11311 -- rosparam load /opt/carma/vehicle/config/bridge.yml && source ~/.base-image/workspace/install/setup.bash && ros2 run ros1_bridge parameter_bridge'
    
  lightbar-driver:
    image: usdotfhwastoldev/carma-lightbar-driver:develop
    network_mode: host
    container_name: lightbar-driver
    volumes_from: 
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
    environment:
      - ROS_IP=192.168.0.100
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch /opt/carma/vehicle/config/drivers.launch drivers:=lightbar_driver'

  cohda_dsrc_driver:
    image: usdotfhwastoldev/carma-cohda-dsrc-driver:develop
    container_name: carma-cohda-dsrc-driver
    network_mode: host
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
    command: bash -c 'source /opt/carma/install/setup.bash && ros2 launch /opt/carma/vehicle/config/drivers.launch.py drivers:=dsrc_driver'

  ssc_controller_driver:
    image: usdotfhwastoldev/carma-ssc-interface-wrapper:develop
    container_name: ssc_controller_driver
    network_mode: host
    privileged: true # Grant access to kvaser
    volumes_from:
      - container:carma-config:ro
    environment:
      - ROS_IP=192.168.0.100
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
    command: bash -c 'source /opt/carma/install/setup.bash && ros2 launch /opt/carma/vehicle/config/drivers.launch.py drivers:=ssc_interface_wrapper'

  novatel_gnss_imu_driver:
    image: usdotfhwastoldev/carma-novatel-gps-driver:develop
    container_name: novatel-gnss-imu-driver
    network_mode: host
    volumes_from:
      - container:carma-config:ro
    environment:
      - ROS_IP=192.168.0.100
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch /opt/carma/vehicle/config/drivers.launch drivers:=novatel_gps_driver'

  velodyne_lidar_driver:
    image: usdotfhwastoldev/carma-velodyne-lidar-driver:develop
    container_name: velodyne-lidar-driver
    network_mode: host
    volumes_from:
      - container:carma-config:ro
    environment:
      - ROS_IP=192.168.0.100
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch /opt/carma/vehicle/config/drivers.launch drivers:=velodyne_lidar_driver_wrapper'
  
  avt_vimba_camera_driver:
    image: usdotfhwastoldev/carma-avt-vimba-driver:develop
    container_name: avt-vimba-camera-driver
    network_mode: host
    volumes_from:
      - container:carma-config:ro
    environment:
      - ROS_IP=192.168.0.100
    volumes:
      - /opt/carma/logs:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
    command: bash -c 'export ROS_NAMESPACE=$${CARMA_INTR_NS} && wait-for-it.sh localhost:11311 -- roslaunch /opt/carma/vehicle/config/drivers.launch drivers:=avt_vimba_camera'

  # TODO DelphiESR Front Driver Node
  # TODO Delphi Srr2 Front Left Driver Node
  # TODO Delphi Srr2 Front Right Driver Node
  # TODO Delphi Srr2 Rear Left Driver Node
  # TODO Delphi Srr2 Rear Right Driver Node
